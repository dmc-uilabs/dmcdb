--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: sqlj; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA IF NOT EXISTS sqlj;

ALTER SCHEMA sqlj OWNER TO gforge;

SET search_path = sqlj, pg_catalog;

--
-- Name: java_call_handler(); Type: FUNCTION; Schema: sqlj; Owner: postgres
--

--CREATE FUNCTION java_call_handler() RETURNS language_handler
--    LANGUAGE c
--    AS 'pljava', 'java_call_handler';


-- ALTER FUNCTION sqlj.java_call_handler() OWNER TO gforge;

--
-- Name: java; Type: PROCEDURAL LANGUAGE; Schema: sqlj; Owner: postgres
--

-- CREATE TRUSTED PROCEDURAL LANGUAGE java HANDLER java_call_handler;


-- ALTER PROCEDURAL LANGUAGE java OWNER TO gforge;

--
-- Name: javau_call_handler(); Type: FUNCTION; Schema: sqlj; Owner: postgres
--

-- CREATE FUNCTION javau_call_handler() RETURNS language_handler
--    LANGUAGE c
--    AS 'pljava', 'javau_call_handler';


--ALTER FUNCTION sqlj.javau_call_handler() OWNER TO gforge;

--
-- Name: javau; Type: PROCEDURAL LANGUAGE; Schema: sqlj; Owner: postgres
--

--CREATE PROCEDURAL LANGUAGE javau HANDLER javau_call_handler;


--ALTER PROCEDURAL LANGUAGE javau OWNER TO gforge;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

/*CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';*/


