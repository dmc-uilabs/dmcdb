insert into notification_action values (1,'FOLLOW');
insert into notification_action values (2,'UN_FOLLOW');
insert into notification_action values (3,'SUBSCRIBE');
insert into notification_action values (4,'UNSUBSCRIBE');
insert into notification_action values (5,'FAVORITE');
insert into notification_action values (6,'UN_FAVORITE');
insert into notification_action values (7,'COMMENT');
insert into notification_action values (8,'UN_COMMENT');
insert into notification_action values (9, 'REVIEW');
insert into notification_action values (10, 'REVOKE_REVIEW');
insert into notification_action values (11,'REPLY');
insert into notification_action values (12,'REVOKE_REPLY');
insert into notification_action values (13,'CREATE');
insert into notification_action values (14,'REMOVE');
insert into notification_action values (15,'UPDATE_DUE_DATE');
insert into notification_action values (16,'SEND_INVITE');
insert into notification_action values (17,'REJECT_INVITE');
insert into notification_action values (18,'ACCEPT_INVITE');


insert into notification_object_type values(1, 'PROJECT');
insert into notification_object_type values(2, 'TASK');
insert into notification_object_type values(3, 'SERVICE');
insert into notification_object_type values(4, 'COMPONENT');
insert into notification_object_type values(5, 'COMPANY');
insert into notification_object_type values(6, 'DISCUSSION');
insert into notification_object_type values(7, 'REVIEW');
insert into notification_object_type values(8, 'SYSTEM_ANNOUNCEMENT');
insert into notification_object_type values(9, 'DMC_ANNOUNCEMENT');
insert into notification_object_type values(10, 'EVNET');

insert into notification_type values(1,3,5,'SERVICE_FAVORITED');
insert into notification_type values(2,1,9,'PROJECT_REVIEW');
insert into notification_type values(3,7,9, 'REPLY_REVIEW');
insert into notification_type values(4,3,3,'SUBSCRIBE_YOUR_SERVICE_TO_PROJECT');
insert into notification_type values(5,5,9, 'REVIEW_COMPANY');
insert into notification_type values(6,6,13,'DISCUSSION_POSTED');
insert into notification_type values(7,6,11,'REPLY_DISCUSSION');
insert into notification_type values(8,9,13, 'ANNOUNCEMENT_DMC');
insert into notification_type values(9,8,13, 'ANNOUNCEMENT_SYSTEM');
insert into notification_type values(10,10,13, 'EVENT_DMC');
insert into notification_type values(11,3,18,'SERVICE_ERROR');

-- A case study
-- "Thomas has favorited your service." -- assume service id: 5; service owner: Thomas with user id 10; a user Bob with user id 20 favorited the service.

-- Producing: When Bob click and favored service 1, an entry will be created in notification:
----- insert into notification (notification_type_id, object_id, origination_user_id, detail_link, notification_time) values (1, 5, 20, '/service-marketplace.php#/1', to_timestamp('02-03-2016 10:50:54', 'dd-mm-yyyy hh24:mi:ss'));

-- Using: When user Thomas with user id 10 login, the steps to get all the service favorited notifier will be:
-- 1) a query to get all the services that user Thomas owned, followed, subscribed, for example, this include service with id 1
-- 2) perform the following query to get all service favorited by Thomas, note if there are more than one services found, they can be listed in (5,...).
----- select * from notification where notification_type_id = 1 and object_id in (5);
-- To add a constrain, only check notifier within 30 days:
----- select * from notification where notification_type_id = 1 and object_id in (5) and date_part('days',now() - notification_time) <30;
-- An example of using timestamp: select date_part('days',notification_time - to_timestamp('02-02-2016 10:50:54', 'dd-mm-yyyy hh24:mi:ss')) as day from notification;

-- Consuming: if the notifier is consumed and record is added to the notification
-- When Thomas read and like to ignore the notifier next time, an entry is created in notification_consumption table:
----- insert into notification_consumption (notificaition_id, user_id, consumption_time) values (1, 10, now());

-- Using with ignoring of consumed notifier:

-- To add a constrain, only check notifier within 30 days:
----- select notification.id from notification 
----- 	where notification_type_id = 1 
----- 	and object_id in (5) 
----- 	and date_part('days',now() - notification_time) <30
----- except
----- select notification.id from notification, notification_consumption 
----- 	where notification.id = notification_consumption.notificaition_id 
----- 	and notification_consumption.user_id = 10;
